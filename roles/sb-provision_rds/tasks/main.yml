---
- name: check for Aurora DB cluster
  command: aws rds describe-db-clusters --filters Name=db-cluster-id,Values="{{ aurora_cluster_name }}" --region "{{ aws_region }}"
  changed_when: false
  register: aurora_cluster_query

- name: parse Aurora DB cluster query
  set_fact:
    aurora_cluster: "{{ aurora_cluster_query.stdout | from_json | json_query('DBClusters[0]')}}"

- name: create Aurora DB cluster
  command: aws rds create-db-cluster --region {{ aws_region }} --cli-input-json '{{ lookup('template', 'templates/create-db-cluster.json.j2') | to_json }}'
  when: aurora_cluster == ''
  register: aurora_cluster_create

- name: parse Aurora DB cluster create
  set_fact:
    aurora_cluster: "{{ aurora_cluster_create.stdout | from_json | json_query('DBCluster') }}"
  when: aurora_cluster == ''

# look for an existing Aurora DB instance for this host using the AWS CLI
- name: check for Aurora DB instance
  command: aws rds describe-db-instances --filters Name=db-instance-id,Values="{{ rds_writer_instance_name }}" --region "{{ aws_region }}"
  changed_when: false
  register: aurora_instance_query

- name: parse Aurora DB instance query
  set_fact:
    aurora_instance: "{{ aurora_instance_query.stdout | from_json | json_query('DBInstances[0]')}}"

# create the instance if it doesnt exist -- passing config as JSON from a Jinja2 template
- name: create Aurora DB write instance
  command: aws rds create-db-instance --region {{ aws_region }} --cli-input-json '{{ lookup('template', 'templates/create-writer-instance.json.j2') | to_json }}'
  when: aurora_instance == ''
  register: aurora_instance_create

- name: parse Aurora DB instance query
  set_fact:
    aurora_instance: "{{ aurora_instance_create.stdout | from_json | json_query('DBInstance')}}"
  when: aurora_instance == ''

# look for an existing Aurora DB instance for this host using the AWS CLI
- name: check for Aurora DB instance
  command: aws rds describe-db-instances --filters Name=db-instance-id,Values="{{ rds-reader_instance_name }}" --region "{{ aws_region }}"
  changed_when: false
  register: aurora_instance_query

- name: parse Aurora DB instance query
  set_fact:
    aurora_instance: "{{ aurora_instance_query.stdout | from_json | json_query('DBInstances[0]')}}"

# create the instance if it doesn't exist -- passing config as JSON from a Jinja2 template
- name: create Aurora DB read instance
  command: aws rds create-db-instance-read-replica --region {{ aws_region }} --cli-input-json '{{ lookup('template', 'templates/create-reader-instance.json.j2') | to_json }}'
  when: aurora_instance == ''
  register: aurora_instance_create

- name: parse Aurora DB instance query
  set_fact:
    aurora_instance: "{{ aurora_instance_create.stdout | from_json | json_query('DBInstance')}}"
  when: aurora_instance == ''
